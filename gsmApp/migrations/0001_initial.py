# Generated by Django 4.1.4 on 2022-12-23 06:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='ads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adschoice', models.CharField(choices=[('localads', 'local ads'), ('adsenseads', 'adsense ads'), ('affliateads', 'affliate ads')], max_length=15)),
                ('banner_image', models.ImageField(blank=True, upload_to='ads')),
                ('url', models.URLField()),
                ('Time', models.DateTimeField(default=django.utils.timezone.now)),
                ('Timestemp', models.CharField(help_text='in days', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='article',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('desc', models.TextField()),
                ('view_count', models.IntegerField(blank=True, default=0)),
                ('slug', models.SlugField(blank=True, default='')),
            ],
            options={
                'ordering': ('sno',),
            },
        ),
        migrations.CreateModel(
            name='brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, default='', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='model',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('Model_code', models.CharField(default='', max_length=100)),
                ('image', models.ImageField(default='', upload_to='images')),
                ('Chipset', models.CharField(default='', max_length=200)),
                ('chipset_description', models.CharField(max_length=400, null=True)),
                ('slug', models.SlugField(blank=True, default='')),
                ('Brand', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='gsmApp.brand')),
                ('Cat', models.ManyToManyField(blank=True, to='gsmApp.category')),
            ],
        ),
        migrations.CreateModel(
            name='onsitedata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Website_Title', models.CharField(blank=True, max_length=100)),
                ('Website_URL', models.URLField(blank=True)),
                ('Website_Logo', models.ImageField(blank=True, upload_to='logo')),
                ('Meta_Description', models.CharField(blank=True, max_length=300)),
                ('Meta_Keywords', models.CharField(blank=True, max_length=500)),
                ('Contact_email', models.EmailField(blank=True, max_length=50)),
                ('Mail_Password', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=500)),
                ('desc', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='socialLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Facebook_URL', models.URLField(blank=True)),
                ('Instragram_URL', models.URLField(blank=True)),
                ('Twitter_URL', models.URLField(blank=True)),
                ('Youtube_URL', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_duration', models.CharField(default='', max_length=300)),
                ('duration', models.IntegerField(blank=True, default=0)),
                ('Price', models.IntegerField(default=0)),
                ('slug', models.SlugField(blank=True)),
                ('Files_to_download', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='user_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNomber', models.CharField(blank=True, max_length=12)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('size', models.CharField(default='', max_length=20)),
                ('desc', models.TextField(default='')),
                ('file', models.FileField(blank=True, default='', upload_to='')),
                ('url', models.URLField(blank=True)),
                ('varient', models.CharField(default='', max_length=100)),
                ('update_at', models.DateField(auto_now=True)),
                ('pro', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, default='', unique=True)),
                ('tags_char', models.TextField(blank=True)),
                ('Brand', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='gsmApp.brand')),
                ('Categories', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='gsmApp.category')),
                ('Model', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='gsmApp.model')),
                ('Tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='pro_Members',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('files_download', models.CharField(blank=True, default='', max_length=50)),
                ('is_active', models.BooleanField(default=False)),
                ('subscription_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='gsmApp.subscription')),
                ('userName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modelpost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gsmApp.model')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gsmApp.blogcomment')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gsmApp.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='Brand',
            field=models.ManyToManyField(blank=True, to='gsmApp.brand'),
        ),
        migrations.AddField(
            model_name='article',
            name='Model',
            field=models.ManyToManyField(blank=True, to='gsmApp.model'),
        ),
    ]
